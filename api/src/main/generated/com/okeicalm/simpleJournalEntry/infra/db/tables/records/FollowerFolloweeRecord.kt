/*
 * This file is generated by jOOQ.
 */
package com.okeicalm.simpleJournalEntry.infra.db.tables.records

import com.okeicalm.simpleJournalEntry.infra.db.tables.FollowerFollowee
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class FollowerFolloweeRecord() : UpdatableRecordImpl<FollowerFolloweeRecord>(FollowerFollowee.FOLLOWER_FOLLOWEE), Record3<Long?, Long?, Long?> {

    var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    var followerId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    var followeeId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<Long?, Long?, Long?> = super.fieldsRow() as Row3<Long?, Long?, Long?>
    override fun valuesRow(): Row3<Long?, Long?, Long?> = super.valuesRow() as Row3<Long?, Long?, Long?>
    override fun field1(): Field<Long?> = FollowerFollowee.FOLLOWER_FOLLOWEE.ID
    override fun field2(): Field<Long?> = FollowerFollowee.FOLLOWER_FOLLOWEE.FOLLOWER_ID
    override fun field3(): Field<Long?> = FollowerFollowee.FOLLOWER_FOLLOWEE.FOLLOWEE_ID
    override fun component1(): Long? = id
    override fun component2(): Long? = followerId
    override fun component3(): Long? = followeeId
    override fun value1(): Long? = id
    override fun value2(): Long? = followerId
    override fun value3(): Long? = followeeId

    override fun value1(value: Long?): FollowerFolloweeRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): FollowerFolloweeRecord {
        this.followerId = value
        return this
    }

    override fun value3(value: Long?): FollowerFolloweeRecord {
        this.followeeId = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: Long?): FollowerFolloweeRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised FollowerFolloweeRecord
     */
    constructor(id: Long? = null, followerId: Long? = null, followeeId: Long? = null) : this() {
        this.id = id
        this.followerId = followerId
        this.followeeId = followeeId
    }
}
